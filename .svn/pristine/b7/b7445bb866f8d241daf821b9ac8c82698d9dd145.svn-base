//
//  ZXMemberCardRootViewController.swift
//  YDHYK
//
//  Created by screson on 2017/11/1.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit

/// 卡.购药
class ZXMemberCardRootViewController: ZXUIViewController {
    //正在获取会员卡
    var isFetchingCard: Bool = false
    @IBOutlet weak var tableView: UITableView!
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        self.title = "卡·购药"
        self.hidesBottomBarWhenPushed = false
        
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()

        self.view.backgroundColor = UIColor.zx_subTintColor
        self.tableView.backgroundColor = UIColor.zx_subTintColor
        
        self.tableView.register(UINib.init(nibName: String.init(describing: ZXDrugstoreListCell.self), bundle: nil), forCellReuseIdentifier: ZXDrugstoreListCell.ZXDrugstoreListCellID)
        self.tableView.register(UINib.init(nibName: String.init(describing: ZXMemeberCardCell.self), bundle: nil), forCellReuseIdentifier: ZXMemeberCardCell.ZXMemeberCardCellID)
        self.tableView.register(UINib.init(nibName: String.init(describing: ZXNoCardHearder.self), bundle: nil), forHeaderFooterViewReuseIdentifier: ZXNoCardHearder.ZXNoCardHearderID)
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(true)
        
        self.requestForQueryMemberCard(true)
    }
    
    lazy var drugsArray: NSMutableArray = {
        let array: NSMutableArray = NSMutableArray.init(capacity: 5)
        return array
    }()
    
    lazy var cardsArray: NSMutableArray = {
        let array: NSMutableArray = NSMutableArray.init(capacity: 5)
        return array
    }()

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
}

//MARK: - ZXDrugstoreListCellDelegate
extension ZXMemberCardRootViewController: ZXDrugstoreListCellDelegate {
    func didDrugstoreListCellTelAction(_ sender: UIButton, _ model: ZXDrugstoreListModel) {
        if model.tel.count != 0 {
            ZXCommonUtils.call(model.tel, failed: { (errMsg) in
                ZXAlertUtils.showAlert(wihtTitle:"提示" , message: "该设备不支持拨打电话功能", buttonText: "知道了", action: nil)
            })
        }
    }
    
    func didDrugstoreListCellBuyAction(_ sender: UIButton, _ model: ZXDrugstoreListModel) {
        if ZXUser.user.tel != ZX.TestAccount.account {
            let storeVC = ZXStoreRootViewController.configVC(storeId: "\(model.storeId)", memberId: ZXUser.user.memberId, token: ZXUser.user.userToken)
            self.navigationController?.pushViewController(storeVC, animated: true)
        }
    }
    
    func didDrugstoreListCellLocationAction(_ sender: UIButton, _ model: ZXDrugstoreListModel) {
        if model.latitude.isEmpty == false , model.longitude.isEmpty == false {
            let mapVC = ZXNearbyRootViewController()
            mapVC.isListVCLocationClick = true
            var mArr: Array<Any> = Array.init()
            mArr.append(model)
            mapVC.modelArray_store = mArr
            self.present(UINavigationController.init(rootViewController: mapVC), animated: true, completion: nil)
        }else{
            ZXHUD.showFailure(in: self.view, text: "定位失败", delay: ZX.HUDDelay)
            return
        }
    }
    
    func didDrugstoreListCellJoinMemberAction(_ sender: UIButton, _ model: ZXDrugstoreListModel) {
        if model.isMember == 0 {
            ZXJoinLeadViewController.checkShow(completion: {
                self.navigationController?.pushViewController(ZXQRCodeScanViewController(), animated: true)
            })
        }
    }
}

//MARK: - ZXMemeberCardCellDelegate
extension ZXMemberCardRootViewController: ZXMemeberCardCellDelegate {
    func didMemeberCardCellBuyAction(_ sender: UIButton, _ model: ZXMemberCardModel) {
        if ZXUser.user.tel != ZX.TestAccount.account {
            let storeVC = ZXStoreRootViewController.configVC(storeId: "\(model.drugstoreId)", memberId: ZXUser.user.memberId, token: ZXUser.user.userToken)
            self.navigationController?.pushViewController(storeVC, animated: true)
        }
    }
    
    func didMemeberCardCellTelAction(_ sender: UIButton, _ model: ZXMemberCardModel) {
        if model.drugstoreTel.count != 0 {
            ZXCommonUtils.call(model.drugstoreTel, failed: { (errMsg) in
                ZXAlertUtils.showAlert(wihtTitle:"提示" , message: "该设备不支持拨打电话功能", buttonText: "知道了", action: nil)
            })
        }else{
            ZXHUD.showFailure(in: self.view, text: "无相关联系方式", delay: ZX.HUDDelay)
        }
    }
}

//MARK: - HTTP
extension ZXMemberCardRootViewController {
    
    //MARK: - 查询会员卡
    func requestForQueryMemberCard(_ showHUD:Bool) {
        if self.isFetchingCard {
            return
        }
        self.isFetchingCard = true
        self.cardsArray.removeAllObjects()
        
        if showHUD {
            ZXHUD.showLoading(in: self.view, text: ZX_LOADING_TEXT, delay: nil)
        }
        ZXNetwork.asyncRequest(withUrl: ZXAPI.api(address: ZXAPIConst.Card.myCard), params: nil, method: .post) { (succ, code, content, string, errMsg) in
            ZXHUD.hide(for: self.view, animated: true)
            ZXHUD.hide(for: self.tableView, animated: true)
            ZXEmptyView.hide(from: self.view)
            self.isFetchingCard = false
            if code == ZXAPI_SUCCESS {
                if let data = content["data"] as? Array<Any>,data.count != 0 {
                    self.cardsArray = ZXMemberCardModel.mj_objectArray(withKeyValuesArray: data)
                }
                if self.cardsArray.count != 0 {
                    self.tableView.reloadData()
                    let firstClick: Bool = false
                    if self.cardsArray.count == 1, firstClick == (UserDefaults.standard.object(forKey: "oneCardIsClick") != nil),firstClick == false {
                        let view = ZXOneCardNoticeView.loadNib()
                        ZXRootController.appWindow()?.addSubview(view)
                    }
                }else{
                    self.requestForClosestDrugstoreList()
                }
            }else if code != ZXAPI_LOGIN_INVALID {
                ZXEmptyView.show(in: self.view, type: .networkError, text: nil, retry: { [unowned self]  in
                    ZXEmptyView.hide(from: self.view)
                    self.requestForQueryMemberCard(false)
                })
            }
        }
    }
    
    //MARK: 附近药店
    func requestForClosestDrugstoreList() {
        ZXLocationUtils.shareInstance.checkCurrentLocation { (status, location) in
            if status == ZXCheckLocationStatus.success {
                var dic: Dictionary<String,Any> = Dictionary.init()
                dic["latitude"] = location?.coordinate.latitude
                dic["longitude"] = location?.coordinate.longitude
                ZXHUD.showLoading(in: self.view, text: ZX_LOADING_TEXT, delay: nil)
                ZXNetwork.asyncRequest(withUrl: ZXAPI.api(address: ZXAPIConst.Card.closestList), params: dic, method: .post, completion: { (succ, code, content, string, errMsg) in
                    ZXHUD.hide(for: self.view, animated: true)
                    ZXHUD.hide(for: self.tableView, animated: true)
                    ZXEmptyView.hide(from: self.view)
                    if code == ZXAPI_SUCCESS {
                        if let data = content["data"] as? Array<Any>,data.count != 0 {
                            self.drugsArray = ZXDrugstoreListModel.mj_objectArray(withKeyValuesArray: data)
                        }else{
                            ZXEmptyView.show(in: self.view, type: .noData, text: "暂无相关数据", retry: {
                                ZXEmptyView.hide(from: self.view)
                                self.requestForClosestDrugstoreList()
                            })
                        }
                        self.tableView.reloadData()
                    }else{
                        ZXEmptyView.show(in: self.view, type: .networkError, text: "网络错误", retry: {
                            ZXEmptyView.hide(from: self.view)
                            self.requestForClosestDrugstoreList()
                        })
                    }
                })
            }
        }
    }
    
    //MARK: - 删除会员
    func requestForDeletedMemberCard(_ indexPath: IndexPath,_ model: ZXMemberCardModel) {
        ZXHUD.showLoading(in: self.view, text: ZX_LOADING_TEXT, delay: nil)
        ZXNetwork.asyncRequest(withUrl: ZXAPI.api(address: ZXAPIConst.Card.deleted), params: ["id":"\(model.uid)"], method: .post) { (succ, code, content, string, errMsg) in
            ZXHUD.hide(for: self.view, animated: true)
            if succ {
                if code == ZXAPI_SUCCESS {
                    self.cardsArray.removeObject(at: indexPath.row)
                    self.tableView.deleteRows(at: [indexPath], with: .automatic)
                    ZXHUD.showSuccess(in: self.view, text: "删除成功", delay: ZX.HUDDelay)
                }else{
                    ZXHUD.showFailure(in: self.view, text: "删除失败", delay: ZX.HUDDelay)
                }
            }else if code != ZXAPI_LOGIN_INVALID{
                ZXHUD.showFailure(in: self.view, text: (errMsg?.errorMessage)!, delay: ZX.HUDDelay)
            }
        }
    }
}
