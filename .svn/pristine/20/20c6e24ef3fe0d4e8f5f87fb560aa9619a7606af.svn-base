//
//  ZXMemberCenterRootViewController.swift
//  YDHYK
//
//  Created by screson on 2017/11/1.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit

class ZXMemberCenterRootViewController: ZXUIViewController {
    
    @IBOutlet weak var tblList: UITableView!
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        self.hidesBottomBarWhenPushed = false
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.setNavigationBarHidden(true, animated: true)
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        if let last = self.navigationController?.viewControllers.last, last != self {
            self.navigationController?.setNavigationBarHidden(false, animated: true)
        }
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
        let topBackView = UIView.init(frame: CGRect.init(x: 0, y: -ZX_BOUNDS_HEIGHT + 2, width: ZX_BOUNDS_WIDTH, height: ZXBOUNDS_HEIGHT))
        topBackView.backgroundColor = UIColor.zx_tintColor
        self.tblList.addSubview(topBackView)
        
        
        if #available(iOS 11.0, *) {
            self.tblList.contentInsetAdjustmentBehavior = .never
        } else {
            // Fallback on earlier versions
            self.automaticallyAdjustsScrollViewInsets = false
            self.edgesForExtendedLayout = []
        }
        self.tblList.backgroundColor = UIColor.zx_subTintColor
        self.tblList.register(UINib.init(nibName: ZXUserInfoCell.NibName, bundle: nil), forCellReuseIdentifier: ZXUserInfoCell.reuseIdentifier)
        self.tblList.register(UINib.init(nibName: ZXUserInfoTextHeaderCell.NibName, bundle: nil), forCellReuseIdentifier: ZXUserInfoTextHeaderCell.reuseIdentifier)
        self.tblList.register(UINib.init(nibName: ZXOrderMenuCell.NibName, bundle: nil), forCellReuseIdentifier: ZXOrderMenuCell.reuseIdentifier)
        self.tblList.register(UINib.init(nibName: ZXToolsMenuCell.NibName, bundle: nil), forCellReuseIdentifier: ZXToolsMenuCell.reuseIdentifier)
         self.tblList.register(ZXEmptyHeader.self, forHeaderFooterViewReuseIdentifier: ZXEmptyHeader.reuseIdentifier)
    }
}

extension ZXMemberCenterRootViewController: ZXUserInfoMenuActionProtocol {
    //MARK: - Message/Setting/EditInfo
    func zxUserInfoMenuHeaderAction(type t: ZXUserMenuActionType) {
        switch t {
            case .messageList:
                let messageList = ZXSystemMessageListViewController()
                self.navigationController?.pushViewController(messageList, animated: true)
            case .setting:
                let settingVC = ZXSettingViewController.loadStoryBoard()
                settingVC.hidesBottomBarWhenPushed = true
                self.navigationController?.pushViewController(settingVC, animated: true)
            case .editInfo:
                self.navigationController?.pushViewController(ZXEditProfileViewController.loadStoryBoard(), animated: true)
            default:
                break
        }
    }
    //MARK: - OrderTypeList
    func zxUserInfoMenuOrderMenuAction(at index: Int) {
        let orderListVC = ZXOrderListViewController()
        orderListVC.orderStatus = .all
        orderListVC.receiveType = .all
        switch index {
            case 0://待付款
                orderListVC.orderStatus = .waitPay
                orderListVC.receiveType = .all
            case 1://待提货
                orderListVC.orderStatus = .waitTake
                orderListVC.receiveType = .selfTake
            case 2://待发货
                orderListVC.orderStatus = .waitDispatch
                orderListVC.receiveType = .express
            case 3://待收货
                orderListVC.orderStatus = .dispatched
                orderListVC.receiveType = .express
            case 4://已完成
                orderListVC.orderStatus = .finished
                orderListVC.receiveType = .all
            default:
                break
        }
        self.navigationController?.pushViewController(orderListVC, animated: true)
    }
    //MAKR: - Tool Type
    func zxUserInfoMenuToolsMenuAction(at index: Int) {
         //print("Tool: \(index)")
        switch index {
            case 0://用药提醒
                print("用药提醒")
            case 1://化验单分析
                let reportAnalyse = ZXReportAnalyseListViewController()
                self.navigationController?.pushViewController(reportAnalyse, animated: true)
            case 2://收藏
                let drugRemark = ZXDrugRemarkViewController()
                self.navigationController?.pushViewController(drugRemark, animated: true)
            case 3://处方
                let prescription = ZXPrescriptionViewController()
                self.navigationController?.pushViewController(prescription, animated: true)
            case 4://预约
                let appointment = ZXAppointmentListViewController()
                self.navigationController?.pushViewController(appointment, animated: true)
            case 5://现金券
                let cashCoupon = ZXCashCouponListViewController()
                self.navigationController?.pushViewController(cashCoupon, animated: true)
            default:
                break
        }
    }
}

extension ZXMemberCenterRootViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if indexPath.section == 1, indexPath.row == 0 { //全部订单
            let orderListVC = ZXOrderListViewController()
            orderListVC.orderStatus = .all
            orderListVC.receiveType = .all
            self.navigationController?.pushViewController(orderListVC, animated: true)
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        switch indexPath.section {
            case 0:
                return ZXUserInfoCell.height
            case 1:
                if indexPath.row == 1 {
                    return ZXOrderMenuCell.height
                }
            case 2:
                if indexPath.row == 1 {
                    return ZXToolsMenuCell.height
                }
            default:
                break
        }
        return 44
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        if section != 0 {
            return 10
        }
        return CGFloat.leastNormalMagnitude
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return CGFloat.leastNormalMagnitude
    }
    
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        let view = tblList.dequeueReusableHeaderFooterView(withIdentifier: ZXEmptyHeader.reuseIdentifier)
        return view
    }
    
    func tableView(_ tableView: UITableView, viewForFooterInSection section: Int) -> UIView? {
        let view = tblList.dequeueReusableHeaderFooterView(withIdentifier: ZXEmptyHeader.reuseIdentifier)
        return view
    }
}

extension ZXMemberCenterRootViewController: UITableViewDataSource {
    
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        switch indexPath.section {
            case 0://用户信息
                let cell = tableView.dequeueReusableCell(withIdentifier: ZXUserInfoCell.reuseIdentifier, for: indexPath) as! ZXUserInfoCell
                cell.delegate = self
                cell.reloadData()
                return cell
            case 1:
                if indexPath.row == 1 {//订单菜单选项
                    let cell = tableView.dequeueReusableCell(withIdentifier: ZXOrderMenuCell.reuseIdentifier, for: indexPath) as! ZXOrderMenuCell
                    cell.delegate = self
                    return cell
                }
            case 2:
                if indexPath.row == 1 {//工具菜单选项
                    let cell = tableView.dequeueReusableCell(withIdentifier: ZXToolsMenuCell.reuseIdentifier, for: indexPath) as! ZXToolsMenuCell
                    cell.delegate = self
                    return cell
                }
            default:
                break
        }
        let cell = tableView.dequeueReusableCell(withIdentifier: ZXUserInfoTextHeaderCell.reuseIdentifier, for: indexPath) as! ZXUserInfoTextHeaderCell
        cell.lbLeftText.text = ""
        cell.lbRightText.text = ""
        cell.imgArrow.isHidden = true
        if indexPath.section == 1,indexPath.row == 0 {
            cell.lbLeftText.text = "我的订单"
            cell.lbRightText.text = "查看全部订单"
            cell.imgArrow.isHidden = false
        } else if indexPath.section == 2, indexPath.row == 0 {
            cell.lbLeftText.text = "我的工具"
        }
        return cell
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if section == 0 {
            return 1
        }
        return 2
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 3
    }
}
