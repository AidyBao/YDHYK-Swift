//
//  ZXSettingTimeView.swift
//  YDHYK
//
//  Created by 120v on 2017/11/24.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit

class ZXSettingTimeView: UIView {

    let space: CGFloat = 14.0

    override init(frame: CGRect) {
        super.init(frame: frame)
        self.setUI()
    }
    
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        self.setUI()
    }
    
    func setUI() {
        self.backgroundColor = UIColor.white
        self.addSubview(self.collectionView)
        self.collectionView.register(UINib.init(nibName: String.init(describing: ZXSettingTimeCell.self), bundle: nil), forCellWithReuseIdentifier: ZXSettingTimeCell.ZXSettingTimeCellID)
        self.collectionView.register(UINib.init(nibName: String.init(describing: ZXAddTimeCell.self), bundle: nil), forCellWithReuseIdentifier: ZXAddTimeCell.ZXAddTimeCellID)
    }
    
    override func layoutSubviews() {
        super.layoutSubviews()
        
        self.collectionView.size = CGSize.init(width: self.frame.size.width, height: self.frame.size.height)
    }
    
    //MARK: - 新增时间/修改时间
    func addAndModifyTIme(_ dataView: ZXDataView, _ indexPath: IndexPath){
        
    }
    //MARK: - 添加/修改用药时间公共方法
    func addAndModifyTimeForcommon(_ array: Array<Any>){
        
    }
    
    //MARK: - 设置默认时间/删除时间
    func setDefaultAndDeleteTime(_ dataView: ZXDataView, _ indexPath: IndexPath) {
        
    }
    
    //MARK: - Lazy
    lazy var collectionView: UICollectionView = {
        let layout: UICollectionViewFlowLayout = UICollectionViewFlowLayout.init()
        layout.minimumInteritemSpacing = 14
        layout.minimumLineSpacing = 14
        let collView: UICollectionView = UICollectionView.init(frame: CGRect.init(x: 0, y: 0, width: self.frame.size.width, height: 125), collectionViewLayout: layout)
        collView.showsVerticalScrollIndicator = false
        collView.showsHorizontalScrollIndicator = false
        collView.delegate = self
        collView.dataSource = self
        return collView
    }()
    
    lazy var dataSource: NSMutableArray = {
        let arr: NSMutableArray = NSMutableArray.init(capacity: 5)
        return arr
    }()
    
}

extension ZXSettingTimeView: UICollectionViewDelegate {
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        
        //1.判断设置是否达上限
        if self.dataSource.count >= 6,indexPath.row == self.dataSource.count - 1 {
            ZXHUD.showFailure(in: self, text: "设置已达上限", delay: ZX.HUDDelay)
            return
        }
        
        //2.时间视图
        let dataView: ZXDataView = ZXDataView.loadNib()
        ZXRootController.appWindow()?.addSubview(dataView)
        
        //3.新增时间已经修改时间
        self.setDefaultAndDeleteTime(dataView, indexPath)
        
        //4.设置默认时间及删除时间设置
        self.addAndModifyTIme(dataView, indexPath)
    }
}

extension ZXSettingTimeView: UICollectionViewDataSource {
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
//        return self.dataSource.count
        return 5
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        if indexPath.row == self.dataSource.count - 1 {
            let cell: ZXAddTimeCell = collectionView.dequeueReusableCell(withReuseIdentifier: ZXAddTimeCell.ZXAddTimeCellID, for: indexPath) as! ZXAddTimeCell
            return cell
        }else{
            let cell: ZXSettingTimeCell = collectionView.dequeueReusableCell(withReuseIdentifier: ZXSettingTimeCell.ZXSettingTimeCellID, for: indexPath) as! ZXSettingTimeCell
            return cell
        }
    }
}

extension ZXSettingTimeView: UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        let conW: CGFloat = (ZXBOUNDS_WIDTH - 4 * self.space)/3
        let conH: CGFloat = conW * 0.67
        return CGSize.init(width: conW, height: conH)
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAt section: Int) -> UIEdgeInsets {
        return UIEdgeInsets.init(top: 0, left: self.space, bottom: self.space, right: self.space)
    }
}

