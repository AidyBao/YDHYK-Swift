//
//  ZXAddNewReportAnalyseViewController.swift
//  YDHYK
//
//  Created by screson on 2017/11/16.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit


/// 新增化验单
class ZXAddNewReportAnalyseViewController: ZXUIViewController {
    //来源拍照分析-暂时没有接口
    var imgReport: UIImage?
    var imgUrlString: String?
    
    @IBOutlet weak var VTips: UIView!
    @IBOutlet weak var imgvSnap: UIImageView!
    @IBOutlet weak var topBackView: UIView!
    @IBOutlet weak var btnReviewImage: ZXUIButton!
    @IBOutlet weak var tblReportItem: UITableView!
    
    @IBOutlet weak var searchResultBackView: UIView!
    @IBOutlet weak var tblSerachResult: UITableView!
    @IBOutlet weak var lbNoResultInfo: UILabel!
    
    @IBOutlet weak var maskView: UIView!
    
    @IBOutlet weak var lbTipsInfo: UILabel!
    @IBOutlet weak var tipsViewHeight: NSLayoutConstraint!
    @IBOutlet weak var topBackHeight: NSLayoutConstraint! // 110 0
    
    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
        self.title = "化验单分析"
        // Do any additional setup after loading the view.
        self.zx_addNavBarButtonItems(textNames: ["模板"], font: nil, color: nil, at: .right)
        self.view.backgroundColor = UIColor.zx_subTintColor
        if imgUrlString == nil && imgReport == nil {
            topBackHeight.constant = 0
        } else {
            topBackHeight.constant = 110
            if let url = imgUrlString {
                self.imgvSnap.kf.setImage(with: URL.init(string: url))
            } else {
                self.imgvSnap.image = imgReport
            }
        }
        self.VTips.backgroundColor = UIColor.zx_subTintColor
        self.lbTipsInfo.font = UIFont.zx_bodyFont(12)
        self.lbTipsInfo.textColor = UIColor.zx_tintColor
        self.lbTipsInfo.text = "分析结果仅作参考,具体请以医师分析为准。"
        
        self.maskView.backgroundColor = UIColor.zx_colorRGB(0, 0, 0, 0.1)
        self.maskView.isHidden = true
        self.maskView.alpha = 0
        
        let tapGesture = UITapGestureRecognizer.init(target: self, action: #selector(tapMaskVie))
        self.maskView.addGestureRecognizer(tapGesture)
        
        self.searchResultBackView.clipsToBounds = true
        self.searchResultBackView.isHidden = true
        self.searchResultBackView.alpha = 0
        
        self.zx_addKeyboardNotification()
        
        //新增录入的检查项
        self.tblReportItem.backgroundColor = UIColor.zx_subTintColor
        self.tblReportItem.separatorColor = UIColor.zx_borderColor
        self.tblReportItem.tableFooterView = UIView.init(frame: CGRect.zero)
        self.tblReportItem.register(UINib.init(nibName: ZXItemInputCell.NibName, bundle: nil), forCellReuseIdentifier: ZXItemInputCell.reuseIdentifier)
        self.tblReportItem.register(UINib.init(nibName: ZXAgeSexInputCell.NibName, bundle: nil), forCellReuseIdentifier: ZXAgeSexInputCell.reuseIdentifier)
        //检索检查项
        self.tblSerachResult.backgroundColor = UIColor.white
        self.tblSerachResult.separatorColor = UIColor.zx_borderColor
        self.tblSerachResult.register(UINib.init(nibName: ZXTemplateItemCell.NibName, bundle: nil), forCellReuseIdentifier: ZXTemplateItemCell.reuseIdentifier)
        
        self.lbNoResultInfo.font = UIFont.zx_titleFont(30)
        self.lbNoResultInfo.textColor = UIColor.zx_subTintColor
        self.lbNoResultInfo.isHidden = true
    }
    
    @objc func tapMaskVie() {
        
    }
    
    func loadCheckItemList(showHUD: Bool) {
        if showHUD {
            ZXHUD.showLoading(in: self.view, text: "获取检查项列表", delay: 0)
        }
        ZXReportAnalyseViewModel.checkItemListBy(templateKey: nil) { (success, code, list, errorMsg) in
            ZXHUD.hide(for: self.view, animated: true)
            if success {
                if list == nil {
                    ZXHUD.showFailure(in: self.view, text: "无可用的检查项数据", delay: ZX.HUDDelay)
                }
            } else {
                if code != ZXAPI_LOGIN_INVALID {
                    ZXHUD.showFailure(in: self.view, text: errorMsg, delay: ZX.HUDDelay)
                }
            }
        }
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        if self.tipsViewHeight.constant < 30 {
            self.tipsViewHeight.constant = 30
            UIView.animate(withDuration: 0.3, animations: {
              self.view.layoutIfNeeded()
            })
        }
    }
    
    override func zx_rightBarButtonAction(index: Int) {
        let templateVC = ZXReportTemplateSelectViewController()
        templateVC.checkEnd = { list in
            for l in list {
                print(l.itemName)
            }
        }
        self.navigationController?.pushViewController(templateVC, animated: true)
    }
    
    //MARK: - Clear Action
    @IBAction func clearAction(_ sender: UIButton) {
        
    }
    //MARK: - StartAnalyseAction
    @IBAction func startAnalyse(_ sender: UIButton) {
        
    }
    //MARK: - Report List
    @IBAction func reportListAction(_ sender: UIButton) {
        let list = ZXReportAnalyseListViewController()
        self.navigationController?.pushViewController(list, animated: true)
    }
    
    @IBAction func reviewSourceImage(_ sender: UIButton) {
        
    }
}

extension ZXAddNewReportAnalyseViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        if tableView == self.tblReportItem {
            if indexPath.section == 0 {
                return 45
            }
            return 75
        }
        return 45
    }
}

extension ZXAddNewReportAnalyseViewController: UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if tableView == self.tblReportItem {
            if section == 0 {
                return 1
            } else {
                return 5
            }
        } else if tableView == self.tblSerachResult {
            return 0
        }
        return 0
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        if tableView == self.tblReportItem {
            return 2
        } else if tableView == self.tblSerachResult {
            
        }
        return 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if tableView == self.tblReportItem {
            if indexPath.section == 0 {//年龄 性别
                let cell = tableView.dequeueReusableCell(withIdentifier: ZXAgeSexInputCell.reuseIdentifier, for: indexPath) as! ZXAgeSexInputCell
                return cell
            } else {
                let cell = tableView.dequeueReusableCell(withIdentifier: ZXItemInputCell.reuseIdentifier, for: indexPath) as! ZXItemInputCell
                return cell
            }
        } else {
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXTemplateItemCell.reuseIdentifier, for: indexPath) as! ZXTemplateItemCell
            return cell
        }
        
    }
    
    
}
